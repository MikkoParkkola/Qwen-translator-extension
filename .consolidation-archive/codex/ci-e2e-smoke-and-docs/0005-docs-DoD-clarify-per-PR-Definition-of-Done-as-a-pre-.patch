From ed6c493e90f1e9d120ebf280152f890b2588418b Mon Sep 17 00:00:00 2001
From: Your Name <you@example.com>
Date: Tue, 19 Aug 2025 13:12:44 +0200
Subject: [PATCH 5/6] docs(DoD): clarify per-PR Definition of Done as a
 pre-submit checklist; reviews noted in PR description only when relevant

---
 AGENTS.md | 33 ++++++++++++++++-----------------
 1 file changed, 16 insertions(+), 17 deletions(-)

diff --git a/AGENTS.md b/AGENTS.md
index 037f742..3b2d5e7 100644
--- a/AGENTS.md
+++ b/AGENTS.md
@@ -44,23 +44,22 @@
 - Commits: imperative, present tense (e.g., "Replace PDF text …"). Optional prefixes `feat:`, `fix:`, `chore:` are welcome when meaningful.
 - PRs: clear description, linked issue, test plan, and screenshots/GIFs for UI changes (PDF viewer, content script). Note any config changes.
 
-## Definition of Done
-- Implement features using test-driven development (write failing tests first).
-- Update unit, integration, and end-to-end test automation.
-- Maintain test automation coverage above 80% with a 95% target.
-- Ensure all CI tests pass and local test automation succeeds.
-- Update AGENTS.md with feature descriptions, architecture notes, style guides, and coding conventions.
-- Keep troubleshooting instructions and debug logging current.
-- Document code and remove dead code.
-- Ensure dashboards and statistics are up to date.
-- Complete security review and implement recommendations.
-- Complete architecture review and implement recommendations.
-- Complete performance review and implement recommendations.
-- Complete UX review and implement recommendations.
-- Complete legal review (IPRs/GDPR/License) and implement recommendations.
-- Catch and log errors, handle recovery, and implement failbacks.
-- Obtain explicit user approval for breaking changes or dropped functionality.
-- for each PR that alters the functionality, bump the version number. For smaller changes, at least the minor version number; for really big changes, the major number.
+## Definition of Done (applies to EVERY PR)
+DoD is a pre-submit checklist for every change — no matter how small. Authors must complete the following before pushing the PR to CI. Reviewers validate that each item has been addressed.
+
+Per‑PR DoD checklist (pre‑CI)
+- Tests first: write/adjust unit, integration, and e2e tests; start with a failing case where feasible.
+- Coverage intent: keep (or move toward) 80%+ coverage; add tests for new branches/paths.
+- Local green: run `npm test`, `npm run build`, and any relevant e2e (`npm run test:e2e:web`, `npm run test:e2e:pdf`) locally and ensure they pass.
+- Logging & errors: meaningful logs (redaction respected), error handling with recovery/fallbacks.
+- Docs updated: README/AGENTS/PROVIDERS where behavior or workflows change; troubleshooting kept current.
+- Version bump: bump package version for any functional change (minor for small changes, major for large/breaking).
+- Change summary: PR description includes a concise summary, risks, and any noteworthy review notes (architecture, performance, UX, security, legal) — these reviews are thinking steps. Only document findings in the PR description when there’s something notable; otherwise it’s implicit that you considered them. No separate review files are required.
+- Backward compatibility: call out breaking changes and obtain explicit approval.
+
+After pushing the PR
+- CI must pass: unit/tests, build, zip; e2e smoke in CI should be green.
+- Iterate based on CI and review feedback until concerns are resolved.
 ## Security & Configuration Tips
 - Never commit API keys. `src/config.local.js` is gitignored; use it for local `pdfViewer.html`. Or run `set-config.js` in the extension popup console to seed `chrome.storage.sync`.
 - Store secrets only in `chrome.storage.sync`. Avoid logging secrets; use `debug` flag for verbose logs.
-- 
2.50.0

