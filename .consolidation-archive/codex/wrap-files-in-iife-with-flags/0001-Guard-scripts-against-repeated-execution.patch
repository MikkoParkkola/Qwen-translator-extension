From 5adb4eca954869214325c98fedfefea15b9a604f Mon Sep 17 00:00:00 2001
From: MikkoParkkola <78788115+MikkoParkkola@users.noreply.github.com>
Date: Sun, 17 Aug 2025 23:33:30 +0200
Subject: [PATCH] Guard scripts against repeated execution

---
 src/config.js        | 18 +++++++++++++++---
 src/contentScript.js | 10 ++++++++--
 src/translator.js    | 30 +++++++++++++++++++++---------
 3 files changed, 44 insertions(+), 14 deletions(-)

diff --git a/src/config.js b/src/config.js
index 3bf39b7..892cfc4 100644
--- a/src/config.js
+++ b/src/config.js
@@ -1,3 +1,12 @@
+(function () {
+if (typeof window !== 'undefined') {
+  if (window.__qwenConfigLoaded) {
+    if (typeof module !== 'undefined') module.exports = window.__qwenConfigModule;
+    return;
+  }
+  window.__qwenConfigLoaded = true;
+}
+
 const defaultCfg = {
   apiKey: '',
   detectApiKey: '',
@@ -137,12 +146,15 @@ function qwenSaveConfig(cfg) {
   return Promise.resolve(); // Otherwise, do nothing
 }
 
+if (typeof module !== 'undefined') {
+  module.exports = { qwenLoadConfig, qwenSaveConfig, defaultCfg, modelTokenLimits };
+}
 if (typeof window !== 'undefined') {
   window.qwenDefaultConfig = defaultCfg;
   window.qwenLoadConfig = qwenLoadConfig;
   window.qwenSaveConfig = qwenSaveConfig;
+  window.qwenModelTokenLimits = modelTokenLimits;
+  window.__qwenConfigModule = module.exports;
 }
 
-if (typeof module !== 'undefined') {
-  module.exports = { qwenLoadConfig, qwenSaveConfig, defaultCfg, modelTokenLimits };
-}
+})();
diff --git a/src/contentScript.js b/src/contentScript.js
index a5e5171..02244c6 100644
--- a/src/contentScript.js
+++ b/src/contentScript.js
@@ -1,6 +1,10 @@
+(function () {
+if (typeof window !== 'undefined') {
+  if (window.__qwenCSLoaded) return;
+  window.__qwenCSLoaded = true;
+}
+
 const skipInit = location.href.startsWith(chrome.runtime.getURL('pdfViewer.html'));
-if (window.__qwenCSLoaded) { /* already initialized */ }
-else window.__qwenCSLoaded = true;
 const logger = (window.qwenLogger && window.qwenLogger.create) ? window.qwenLogger.create('content') : console;
 let observers = [];
 let currentConfig;
@@ -798,3 +802,5 @@ if (typeof module !== 'undefined') {
     },
   };
 }
+
+})();
diff --git a/src/translator.js b/src/translator.js
index 3690459..e155535 100644
--- a/src/translator.js
+++ b/src/translator.js
@@ -1,3 +1,12 @@
+(function () {
+if (typeof window !== 'undefined') {
+  if (window.__qwenTranslatorLoaded) {
+    if (typeof module !== 'undefined') module.exports = window.__qwenTranslatorModule;
+    return;
+  }
+  window.__qwenTranslatorLoaded = true;
+}
+
 let fetchFn = typeof fetch !== 'undefined' ? fetch : undefined;
 var approxTokens;
 var createThrottle;
@@ -944,13 +953,6 @@ function qwenClearCache() {
   cache.clear();
   _persistClear();
 }
-if (typeof window !== 'undefined') {
-  window.qwenTranslate = qwenTranslate;
-  window.qwenTranslateStream = qwenTranslateStream;
-  window.qwenTranslateBatch = qwenTranslateBatch;
-  window.qwenClearCache = qwenClearCache;
-  window.qwenSetTokenBudget = _setTokenBudget;
-}
 if (typeof self !== 'undefined' && typeof window === 'undefined') {
   self.qwenTranslate = qwenTranslate;
   self.qwenTranslateStream = qwenTranslateStream;
@@ -970,13 +972,23 @@ if (typeof module !== 'undefined') {
     qwenGetCacheSize,
     _setGetUsage,
     _getTokenBudget,
-    _setTokenBudget,
-    _throttleKeys: () => Array.from(throttles.keys()),
+  _setTokenBudget,
+  _throttleKeys: () => Array.from(throttles.keys()),
   };
 }
+if (typeof window !== 'undefined') {
+  window.qwenTranslate = qwenTranslate;
+  window.qwenTranslateStream = qwenTranslateStream;
+  window.qwenTranslateBatch = qwenTranslateBatch;
+  window.qwenClearCache = qwenClearCache;
+  window.qwenSetTokenBudget = _setTokenBudget;
+  window.__qwenTranslatorModule = module.exports;
+}
 let chooseStrategy = () => 'proxy';
 try {
   if (typeof window !== 'undefined' && window.qwenFetchStrategy) chooseStrategy = window.qwenFetchStrategy.choose;
   else if (typeof self !== 'undefined' && typeof window === 'undefined' && self.qwenFetchStrategy) chooseStrategy = self.qwenFetchStrategy.choose;
   else if (typeof require !== 'undefined') chooseStrategy = require('./lib/fetchStrategy').choose;
 } catch {}
+
+})();
-- 
2.50.0

