From bad49830a5c076b0c6bd8b432ee73e590495a922 Mon Sep 17 00:00:00 2001
From: MikkoParkkola <78788115+MikkoParkkola@users.noreply.github.com>
Date: Tue, 19 Aug 2025 17:15:56 +0200
Subject: [PATCH] test: cover PDF translation overlay

---
 e2e/pdf-compare.spec.js | 59 +++++++++++++++++++++++++++++++++++++++++
 e2e/pdfs/hello.pdf      | 32 ++++++++++++++++++++++
 package.json            |  1 +
 3 files changed, 92 insertions(+)
 create mode 100644 e2e/pdfs/hello.pdf

diff --git a/e2e/pdf-compare.spec.js b/e2e/pdf-compare.spec.js
index 4f1898b..cba08da 100644
--- a/e2e/pdf-compare.spec.js
+++ b/e2e/pdf-compare.spec.js
@@ -87,6 +87,65 @@ test.describe('PDF visual compare', () => {
     }
   });
 
+  test('loads PDF, translates, and overlays text', async ({ page }) => {
+    await page.route('**/config.js', route => {
+      route.fulfill({
+        contentType: 'application/javascript',
+        body: `
+          window.qwenLoadConfig = async () => ({
+            provider: 'mock',
+            apiEndpoint: '',
+            apiKey: 'test',
+            model: '',
+            failover: false,
+            sourceLanguage: 'en',
+            targetLanguage: 'fr',
+            debug: false
+          });
+          window.qwenSetTokenBudget = () => {};
+          window.qwenSetCacheLimit = () => {};
+          window.qwenSetCacheTTL = () => {};
+          window.qwenTM = { set: () => {}, get: () => null };
+        `
+      });
+    });
+    await page.route('**/translator.js', route => {
+      route.fulfill({
+        contentType: 'application/javascript',
+        body: 'window.qwenTranslate = async ({ text }) => ({ text: `T:${text}` });'
+      });
+    });
+    await page.addInitScript(() => {
+      window.chrome = {
+        runtime: {
+          getURL: p => `http://127.0.0.1:8080/src/${p}`,
+          onMessage: { addListener: () => {} },
+          sendMessage: () => {}
+        },
+        storage: { sync: { get: (d, cb) => cb(d), set: (_d, cb) => cb && cb() } }
+      };
+      window.qwenCache = {
+        cacheReady: Promise.resolve(),
+        getCache: () => null,
+        setCache: () => {},
+        removeCache: () => {}
+      };
+    });
+    const pdfUrl = 'http://127.0.0.1:8080/e2e/pdfs/hello.pdf';
+    await page.goto(`http://127.0.0.1:8080/src/pdfViewer.html?file=${encodeURIComponent(pdfUrl)}`);
+    await page.waitForSelector('.translationLayer div');
+    const original = await page.evaluate(() => {
+      const spans = Array.from(document.querySelectorAll('.textLayer span'));
+      return spans.map(s => s.textContent).find(t => /[A-Za-z]/.test(t));
+    });
+    const expected = `T:${original}`;
+    await expect(page.locator('.translationLayer div', { hasText: expected }).first()).toHaveText(expected);
+    const pages = await page.locator('.page').count();
+    const overlays = await page.locator('.translationLayer').count();
+    expect(pages).toBe(1);
+    expect(overlays).toBe(pages);
+  });
+
   test('viewer progress reacts to translation-status', async ({ page }) => {
     await page.addInitScript(() => {
       window.__listeners = [];
diff --git a/e2e/pdfs/hello.pdf b/e2e/pdfs/hello.pdf
new file mode 100644
index 0000000..0945624
--- /dev/null
+++ b/e2e/pdfs/hello.pdf
@@ -0,0 +1,32 @@
+%PDF-1.1
+1 0 obj
+<< /Type /Catalog /Pages 2 0 R >>
+endobj
+2 0 obj
+<< /Type /Pages /Kids [3 0 R] /Count 1 >>
+endobj
+3 0 obj
+<< /Type /Page /Parent 2 0 R /MediaBox [0 0 200 200] /Contents 4 0 R /Resources << /Font << /F1 5 0 R >> >> >>
+endobj
+4 0 obj
+<< /Length 44 >>
+stream
+BT /F1 24 Tf 72 100 Td (Hello) Tj ET
+endstream
+endobj
+5 0 obj
+<< /Type /Font /Subtype /Type1 /BaseFont /Helvetica >>
+endobj
+xref
+0 6
+0000000000 65535 f
+0000000010 00000 n
+0000000053 00000 n
+0000000100 00000 n
+0000000247 00000 n
+0000000336 00000 n
+trailer
+<< /Root 1 0 R /Size 6 >>
+startxref
+402
+%%EOF
\ No newline at end of file
diff --git a/package.json b/package.json
index a852156..5bced85 100644
--- a/package.json
+++ b/package.json
@@ -7,6 +7,7 @@
     "test": "jest",
     "build:safari": "bash scripts/convert-safari.sh",
     "test:e2e": "playwright test e2e",
+    "test:e2e:pdf": "playwright test e2e/pdf-compare.spec.js",
     "e2e": "npm run test:e2e",
     "postinstall": "bash scripts/fetch-wasm-assets.sh",
     "clean": "rimraf dist",
-- 
2.50.0

