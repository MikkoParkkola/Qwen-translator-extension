From fb900ef1570d6697e3995fa066044cb3c9304cb0 Mon Sep 17 00:00:00 2001
From: MikkoParkkola <78788115+MikkoParkkola@users.noreply.github.com>
Date: Mon, 18 Aug 2025 07:51:28 +0200
Subject: [PATCH 5/9] Merge branch 'main' into
 codex/add-offline-indicators-and-messaging-74rmba

---
 package-lock.json    |  8 ++++++++
 package.json         | 15 +++++++++++++++
 src/background.js    | 17 -----------------
 src/contentScript.js | 17 +++++++++++++++++
 src/manifest.json    |  2 +-
 5 files changed, 41 insertions(+), 18 deletions(-)

diff --git a/package-lock.json b/package-lock.json
index cfb4dfe..26b9ec7 100644
--- a/package-lock.json
+++ b/package-lock.json
@@ -1,12 +1,20 @@
 {
   "name": "qwen-translator-extension",
+<<<<<<< HEAD
   "version": "1.35.1",
+=======
+  "version": "1.34.0",
+>>>>>>> da06222 (Merge branch 'main' into codex/add-offline-indicators-and-messaging-74rmba)
   "lockfileVersion": 3,
   "requires": true,
   "packages": {
     "": {
       "name": "qwen-translator-extension",
+<<<<<<< HEAD
       "version": "1.35.1",
+=======
+      "version": "1.34.0",
+>>>>>>> da06222 (Merge branch 'main' into codex/add-offline-indicators-and-messaging-74rmba)
       "hasInstallScript": true,
       "license": "AGPL-3.0-or-later",
       "dependencies": {
diff --git a/package.json b/package.json
index edb2388..47453f9 100644
--- a/package.json
+++ b/package.json
@@ -1,6 +1,10 @@
 {
   "name": "qwen-translator-extension",
+<<<<<<< HEAD
   "version": "1.35.1",
+=======
+  "version": "1.35.0",
+>>>>>>> da06222 (Merge branch 'main' into codex/add-offline-indicators-and-messaging-74rmba)
   "description": "Extension to translate web pages using Qwen-MT-Turbo model",
   "main": "index.js",
   "scripts": {
@@ -24,6 +28,7 @@
   "license": "AGPL-3.0-or-later",
   "type": "commonjs",
   "types": "types/index.d.ts",
+<<<<<<< HEAD
   "typesVersions": {
     "*": {
       "background": [
@@ -40,6 +45,16 @@
       ]
     }
   },
+=======
+    "typesVersions": {
+      "*": {
+        "background": ["types/background.d.ts"],
+        "contentScript": ["types/contentScript.d.ts"],
+      "providers/*": ["types/providers/*"],
+      "popup/*": ["types/popup/*"]
+      }
+    },
+>>>>>>> da06222 (Merge branch 'main' into codex/add-offline-indicators-and-messaging-74rmba)
   "devDependencies": {
     "@playwright/test": "^1.54.2",
     "@types/jest": "^30.0.0",
diff --git a/src/background.js b/src/background.js
index f8858c5..5a8898c 100644
--- a/src/background.js
+++ b/src/background.js
@@ -600,14 +600,9 @@ async function handleTranslate(opts) {
     logger.error('background translation error', err);
     logUsage(tokens, Date.now() - start);
     iconError = true;
-<<<<<<< HEAD
     const offline = isOfflineError(err);
     if (offline) {
       try { chrome.runtime.sendMessage({ action: 'translation-status', status: { offline: true } }); } catch {}
-=======
-    if (isOfflineError(err)) {
-      notifyOffline();
->>>>>>> 3073a61 (fix: guard offline HUD against stale timers)
       return { error: 'offline' };
     }
     return { error: err.message };
@@ -624,13 +619,9 @@ chrome.runtime.onMessage.addListener((msg, sender, sendResponse) => {
     handleTranslate(msg.opts)
       .then(sendResponse)
       .catch(err => {
-<<<<<<< HEAD
         if (isOfflineError(err)) {
           try { chrome.runtime.sendMessage({ action: 'translation-status', status: { offline: true } }); } catch {}
         }
-=======
-        if (isOfflineError(err)) notifyOffline();
->>>>>>> 3073a61 (fix: guard offline HUD against stale timers)
         sendResponse({ error: err.message });
       });
     return true;
@@ -932,18 +923,10 @@ chrome.runtime.onConnect.addListener(port => {
         logger.error('background port translation error', err);
         logUsage(tokens, Date.now() - start);
         iconError = true;
-<<<<<<< HEAD
         const offline = isOfflineError(err);
         try { port.postMessage({ requestId, error: offline ? 'offline' : err.message }); } catch {}
         if (offline) {
           try { chrome.runtime.sendMessage({ action: 'translation-status', status: { offline: true } }); } catch {}
-=======
-        if (isOfflineError(err)) {
-          notifyOffline();
-          try { port.postMessage({ requestId, error: 'offline' }); } catch {}
-        } else {
-          try { port.postMessage({ requestId, error: err.message }); } catch {}
->>>>>>> 3073a61 (fix: guard offline HUD against stale timers)
         }
       } finally {
         clearTimeout(timeout);
diff --git a/src/contentScript.js b/src/contentScript.js
index 0a59bc5..9573016 100644
--- a/src/contentScript.js
+++ b/src/contentScript.js
@@ -54,6 +54,19 @@ if (typeof window !== 'undefined' && window.__qwenCSLoaded) {
   }
   window.addEventListener('beforeunload', onBeforeUnload);
 
+  function cleanupControllers() {
+    controllers.forEach(c => {
+      try { c.abort(); } catch {}
+    });
+    controllers.clear();
+  }
+
+  function onBeforeUnload() {
+    cleanupControllers();
+    window.removeEventListener('beforeunload', onBeforeUnload);
+  }
+  window.addEventListener('beforeunload', onBeforeUnload);
+
 function handleLastError(cb) {
   return (...args) => {
     const err = chrome.runtime.lastError;
@@ -392,7 +405,11 @@ async function showSelectionBubble(range, text) {
       });
       result.textContent = res.text;
     } catch (e) {
+<<<<<<< HEAD
       const offline = isOfflineError(e);
+=======
+      const offline = !navigator.onLine || (e && /network|fetch/i.test(e.message || ''));
+>>>>>>> da06222 (Merge branch 'main' into codex/add-offline-indicators-and-messaging-74rmba)
       if (offline) {
         result.textContent = t('bubble.offline');
         try {
diff --git a/src/manifest.json b/src/manifest.json
index c12cdd8..8f84dce 100644
--- a/src/manifest.json
+++ b/src/manifest.json
@@ -74,4 +74,4 @@
       ]
     }
   ]
-}
\ No newline at end of file
+}
-- 
2.50.0

